version: "3.9"
services:
  database:
    image: "postgres:12"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=${DB_PORT:-5432}
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - $DB_PORT:5432
    networks:
      - backend
    restart: unless-stopped
  backend:
    container_name: backend
    hostname: backend
    build:
      context: ./backend
    environment:
      - DB_DATABASE=${POSTGRES_DB}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST:-database}
      - DB_PORT=${DB_PORT:-5432}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - SWAGGER_API_PATH=${SWAGGER_API_PATH:-api}
      - PORT=${BACKEND_APP_PORT:-4000}
    expose:
      - $BACKEND_APP_PORT
    ports:
      - $BACKEND_APP_PORT:$BACKEND_APP_PORT
    links:
      - database:postgres
    depends_on:
      - database
    networks:
      - backend
      - frontend
    restart: unless-stopped
  frontend:
    container_name: frontend
    hostname: frontend
    environment:
      - FRONTEND_APP_PORT=${FRONTEND_APP_PORT:-8081}
      - API_SERVER_URL=${API_SERVER_URL}
    build:
      context: ./frontend
      args:
        - API_SERVER_URL=${API_SERVER_URL}
    depends_on:
      - backend
    ports:
      - $FRONTEND_APP_PORT:80
    networks:
      - frontend
    restart: unless-stopped
volumes:
  pg-data:

networks:
  backend:
    internal: true
  frontend:
version: "3.9"
services:
  nginx_proxy:
    image: nginx:latest
    volumes:
      - ./nginx/templates:/etc/nginx/templates
    # network_mode: host
    links:
      - frontend
      - backend
    networks:
      - external
    hostname: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    environment:
      - PORT=${PORT}
      - HOST=${HOST}
      - API_HOST=${API_HOST}
  database:
    image: "postgres:12"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - internal
      - external
  backend:
    container_name: backend
    hostname: backend
    build:
      context: ./backend
      args:
        - PORT=${PORT:-4000}
    environment:
      - DB_DATABASE=${POSTGRES_DB}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST:-database}
      - DB_PORT=${DB_PORT:-5432}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - SWAGGER_API_PATH=${SWAGGER_API_PATH:-api}
      - PORT=${PORT:-4000}
    ports:
      - 4000:3001
    links:
      - database:postgres
    depends_on:
      - database
    networks:
      - internal
      - external
  frontend:
    container_name: frontend
    hostname: frontend
    build:
      context: ./frontend
      args:
        - API_BASE_URL=${API_BASE_URL}
    depends_on:
      - backend
    volumes:
      - ./frontend/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 8081:80
    networks:
      - external
volumes:
  pg-data:
networks:
  internal:
    internal: true
  external: